<?php
namespace IhebBundle\Controller;

use IhebBundle\Entity\Club;
use IhebBundle\Entity\News;
use IhebBundle\Entity\Notification;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use AppBundle\Entity\User;
use Symfony\Component\HttpFoundation\JsonResponse;
use Symfony\Component\HttpFoundation\Response;
use Knp\Bundle\SnappyBundle\Snappy\Response\PdfResponse;


class ClubController extends Controller
{
    public function newClubAction(Request $request)
    {
        $user = $this->container->get('security.token_storage')->getToken()->getUser();
        if ($user == null || empty($user) || $user == "anon.") {
            return $this->redirectToRoute('fos_user_security_login');
        } else {
            $id_user = $user->getId();
            $currentUser = $this->getDoctrine()->getRepository(User::class)->find($id_user);
            $club = new Club();
            if ($request->getMethod() == "POST") {
                if ($this->getDoctrine()->getRepository(Club::class)->findBy(array('adminClub' => $currentUser, 'statusClub' => 'Waiting')) != null) {
                    $this->get('session')->getFlashBag()->add('notice', 'you have already applied for a group creation !');
                    return $this->redirectToRoute('new_club');
                }

                $filephoto = $request->files->get('form_photo');
                $fileNamephoto = $this->generateUniqueFileName() . '.' . $filephoto->guessExtension();
                $filephoto->move($this->getParameter('brochures_directory'), $fileNamephoto);
                $club->setPhotoClub($fileNamephoto);
                $club->setAdminClub($currentUser);
                $club->setStatusClub("Waiting");
                $club->setDateCreationClub(new \DateTime());
                $club->setNameClub($request->get('form_name'));
                $club->setTypeClub($request->get('form_type'));
                $club->setDescriptionClub($request->get('form_description'));

                $notif = new  Notification();
                $notif->setStatus(0);
                $notif->setSubject("New Club");
                $notif->setText($currentUser->getUsername()." adds a new club named ".$club->getNameClub());

                foreach ($this->getDoctrine()->getRepository(User::class)->findAll() as $user){
                    if(in_array('ROLE_ADMIN', $user->getRoles())){
                        $notif->setIdUser($user);
                    }
                }

                $em = $this->getDoctrine()->getManager();
                $em->persist($club);
                $em->flush();

                $em1 = $this->getDoctrine()->getManager();
                $em1->persist($notif);
                $em1->flush();



                return $this->redirectToRoute('club_by_user');
            }

        }
        return $this->render('@Iheb/Club/newClub.html.twig');

    }

    /**
     * @return string
     */
    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    public function getAllApprovedClubAction(Request $request)
    {
        if ($request->getMethod() == "POST") {
            $clubRequest = $request->get('club_search');
            $listclubs = $this->getDoctrine()->getRepository(Club::class)->createQueryBuilder('c')
                ->where("c.nameClub LIKE '%$clubRequest%' AND c.statusClub='Approved'")
                ->getQuery()->getResult();

        } else {
            $listclubs = $this->getDoctrine()->getRepository(Club::class)->findBy(array('statusClub' => 'Approved'));
        }
        if (empty($listclubs)) {
            $this->get('session')->getFlashBag()->add('notice', 'no club found !');
        }
        //var_dump($listclubs);
        //die();

        return $this->render('@Iheb/Club/allClub.html.twig', array('clubs' => $listclubs));
    }

    public function getClubByIdAction($id)
    {
        $user = $this->container->get('security.token_storage')->getToken()->getUser();
        if ($user == null || empty($user) || $user == "anon.") {
            return $this->redirectToRoute('fos_user_security_login');
        } else {
            $club = $this->getDoctrine()->getRepository(Club::class)->find($id);
            $type=null;
            $user = $this->container->get('security.token_storage')->getToken()->getUser();
            $id_user = $user->getId();
            $currentUser = $this->getDoctrine()->getRepository(User::class)->find($id_user);

            if($club->findMembre($currentUser)){
                $type="Membre";
            }elseif ($club->getAdminClub()== $currentUser){
                $type="Admin";
            }
            $listnews = $this->getDoctrine()->getRepository(News::class)->findBy(array('idClub' => $club),array('creationDate' => 'DESC'),4);


            return $this->render('@Iheb/Club/clubById.html.twig', array('club' => $club,'type' =>$type,'news'=>$listnews));

        }
    }

    public function getClubByUserAction(Request $request){
        $user = $this->container->get('security.token_storage')->getToken()->getUser();
        if ($user == null || empty($user) || $user == "anon.") {
            return $this->redirectToRoute('fos_user_security_login');
        }

        $id_user = $user->getId();
        $currentUser = $this->getDoctrine()->getRepository(User::class)->find($id_user);
        if ($request->getMethod() == "POST") {
            $clubRequest = $request->get('club_search');
            $listclubs = $this->getDoctrine()->getRepository(Club::class)->createQueryBuilder('c')
                ->where("c.nameClub LIKE '%$clubRequest%'")
                ->getQuery()->getResult();

        }else{
            $listclubs =$this->getDoctrine()->getRepository(Club::class)->findBy(array('adminClub' => $currentUser));
        }
        if (empty($listclubs)) {
            $this->get('session')->getFlashBag()->add('notice', 'no club found !');
        }

        return $this->render('@Iheb/Club/allClubByUser.html.twig', array('clubs' => $listclubs));

    }

    public function updateClubAction(Request $request, $id){

        $user = $this->container->get('security.token_storage')->getToken()->getUser();
        if ($user == null || empty($user) || $user == "anon.") {
            return $this->redirectToRoute('fos_user_security_login');
        } else {
            $clubInfo = $this->getDoctrine()->getRepository(Club::class)->find($id);
            if($clubInfo==null) {
                return new Response("Club non trouvÃ©");
            }
            if ($request->getMethod() == "POST") {
                $club=$clubInfo;
                $filephoto = $request->files->get('form_photo');
                $fileNamephoto = $this->generateUniqueFileName() . '.' . $filephoto->guessExtension();
                $filephoto->move($this->getParameter('brochures_directory'), $fileNamephoto);
                $club->setPhotoClub($fileNamephoto);
                $club->setNameClub($request->get('form_name'));
                $club->setTypeClub($request->get('form_type'));
                $club->setDescriptionClub($request->get('form_description'));
                $em = $this->getDoctrine()->getManager();
                $em->persist($club);
                $em->flush();
                return $this->redirectToRoute('club_by_user');
            }
        }
        return $this->render('@Iheb/Club/updateClub.html.twig', array(
            'club' => $clubInfo));
    }

    public function deleteClubAction($id){

        $club = $this->getDoctrine()->getRepository(Club::class)->find($id);
        $clubInfo=$club;
        if($club==null) {
            return new Response("Club non trouvÃ©");
        }
        $em = $this->getDoctrine()->getManager();
        $em->remove($club);
        $em->flush();
        $this->get('session')->getFlashBag()->add('notice1', $clubInfo->getNameClub().' club has been successfully removed !');

        if ($this->get('security.authorization_checker')->isGranted('ROLE_ADMIN')) {
            $notif = new  Notification();
            $notif->setStatus(0);
            $notif->setSubject("Unfortunately");
            $notif->setText("The administrator has deleted your club ".$clubInfo->getNameClub());
            $notif->setIdUser($clubInfo->getAdminClub());
            $em1 = $this->getDoctrine()->getManager();
            $em1->persist($notif);
            $em1->flush();

            return $this->redirectToRoute('clubs');
        }
        else{
            return $this->redirectToRoute('club_by_user');
        }

    }

    public function approveClubAction($id){
        $clubInfo = $this->getDoctrine()->getRepository(Club::class)->find($id);
        $clubInfo->setStatusClub('Approved');
        $notif = new  Notification();
        $notif->setStatus(0);
        $notif->setSubject("Congratulations");
        $notif->setText("The administrator has approved your club ".$clubInfo->getNameClub());
        $notif->setIdUser($clubInfo->getAdminClub());

        $em = $this->getDoctrine()->getManager();
        $em->persist($clubInfo);
        $em->flush();

        $em1 = $this->getDoctrine()->getManager();
        $em1->persist($notif);
        $em1->flush();
        return $this->redirectToRoute('clubs');
    }

    public function refuseClubAction($id){
        $clubInfo = $this->getDoctrine()->getRepository(Club::class)->find($id);
        $clubInfo->setStatusClub('Refused');

        $notif = new  Notification();
        $notif->setStatus(0);
        $notif->setSubject("Unfortunately");
        $notif->setText("The administrator has refused your club ".$clubInfo->getNameClub());
        $notif->setIdUser($clubInfo->getAdminClub());

        $em = $this->getDoctrine()->getManager();
        $em->persist($clubInfo);
        $em->flush();

        $em1 = $this->getDoctrine()->getManager();
        $em1->persist($notif);
        $em1->flush();
        return $this->redirectToRoute('clubs');

    }


    public function getAllClubAction(Request $request){
        if ($request->getMethod() == "POST") {
            $clubRequest = $request->get('club_search');
            $listclubs = $this->getDoctrine()->getRepository(Club::class)->createQueryBuilder('c')
                ->where("c.nameClub LIKE '%$clubRequest%' AND c.statusClub='Approved'")
                ->getQuery()->getResult();

        } else {
            $listclubs = $this->getDoctrine()->getRepository(Club::class)->findAll();
        }
        if (empty($listclubs)) {
            $this->get('session')->getFlashBag()->add('notice', 'no club found !');
        }
        return $this->render('@Iheb/Admin/allClubAdmin.html.twig', array('clubs' => $listclubs));
    }

    public function joinClubAction(Request $request,$id){
        $clubInfo = $this->getDoctrine()->getRepository(Club::class)->find($id);
        $user = $this->container->get('security.token_storage')->getToken()->getUser();
        $id_user = $user->getId();
        $currentUser = $this->getDoctrine()->getRepository(User::class)->find($id_user);
        if($clubInfo->getAdminClub()== $currentUser){
            $this->get('session')->getFlashBag()->add('notice', 'you are admin in this club !');
            return ;
        }
        if ($request->getMethod() == "POST") {
            $html = $this->renderView('@Iheb/Club/inscription.html.twig', array(
                'club' => $clubInfo,'user'=>$user
            ));

            return new PdfResponse(
                $this->get('knp_snappy.pdf')->getOutputFromHtml($html),
                'file.pdf'
            );
        }
        $clubInfo->addMember($currentUser);
        $em1 = $this->getDoctrine()->getManager();
        $em1->persist($clubInfo);
        $em1->flush();

        return $this->render('@Iheb/Club/inscription.html.twig', array('club' => $clubInfo,'user'=>$user));
    }

}